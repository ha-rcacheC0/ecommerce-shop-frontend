/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as EventsRouteImport } from './routes/events/route'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as UserRegisterImport } from './routes/user/register'
import { Route as UserLoginImport } from './routes/user/login'
import { Route as ProductsShowsImport } from './routes/products/shows'
import { Route as EventsNewYearsImport } from './routes/events/new-years'
import { Route as EventsGenderRevealImport } from './routes/events/gender-reveal'
import { Route as EventsFourthJulyImport } from './routes/events/fourth-july'
import { Route as ProductsProductIdRouteImport } from './routes/products/$productId/route'
import { Route as AuthAdminRouteImport } from './routes/_auth/admin/route'
import { Route as AuthProfileIndexImport } from './routes/_auth/profile/index'
import { Route as AuthProfileEditImport } from './routes/_auth/profile/edit'
import { Route as AuthAdminUsersImport } from './routes/_auth/admin/users'
import { Route as AuthAdminReportsImport } from './routes/_auth/admin/reports'
import { Route as AuthAdminInventoryImport } from './routes/_auth/admin/inventory'
import { Route as AuthProfileCartCartIdIndexImport } from './routes/_auth/profile/cart/$cartId/index'
import { Route as AuthProfileCartCartIdSuccessImport } from './routes/_auth/profile/cart/$cartId/success'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const EventsRouteRoute = EventsRouteImport.update({
  path: '/events',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProductsIndexRoute = ProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const UserRegisterRoute = UserRegisterImport.update({
  path: '/user/register',
  getParentRoute: () => rootRoute,
} as any)

const UserLoginRoute = UserLoginImport.update({
  path: '/user/login',
  getParentRoute: () => rootRoute,
} as any)

const ProductsShowsRoute = ProductsShowsImport.update({
  path: '/products/shows',
  getParentRoute: () => rootRoute,
} as any)

const EventsNewYearsRoute = EventsNewYearsImport.update({
  path: '/new-years',
  getParentRoute: () => EventsRouteRoute,
} as any)

const EventsGenderRevealRoute = EventsGenderRevealImport.update({
  path: '/gender-reveal',
  getParentRoute: () => EventsRouteRoute,
} as any)

const EventsFourthJulyRoute = EventsFourthJulyImport.update({
  path: '/fourth-july',
  getParentRoute: () => EventsRouteRoute,
} as any)

const ProductsProductIdRouteRoute = ProductsProductIdRouteImport.update({
  path: '/products/$productId',
  getParentRoute: () => rootRoute,
} as any)

const AuthAdminRouteRoute = AuthAdminRouteImport.update({
  path: '/admin',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProfileIndexRoute = AuthProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProfileEditRoute = AuthProfileEditImport.update({
  path: '/profile/edit',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAdminUsersRoute = AuthAdminUsersImport.update({
  path: '/users',
  getParentRoute: () => AuthAdminRouteRoute,
} as any)

const AuthAdminReportsRoute = AuthAdminReportsImport.update({
  path: '/reports',
  getParentRoute: () => AuthAdminRouteRoute,
} as any)

const AuthAdminInventoryRoute = AuthAdminInventoryImport.update({
  path: '/inventory',
  getParentRoute: () => AuthAdminRouteRoute,
} as any)

const AuthProfileCartCartIdIndexRoute = AuthProfileCartCartIdIndexImport.update(
  {
    path: '/profile/cart/$cartId/',
    getParentRoute: () => AuthRoute,
  } as any,
)

const AuthProfileCartCartIdSuccessRoute =
  AuthProfileCartCartIdSuccessImport.update({
    path: '/profile/cart/$cartId/success',
    getParentRoute: () => AuthRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/admin': {
      id: '/_auth/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthAdminRouteImport
      parentRoute: typeof AuthImport
    }
    '/products/$productId': {
      id: '/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/events/fourth-july': {
      id: '/events/fourth-july'
      path: '/fourth-july'
      fullPath: '/events/fourth-july'
      preLoaderRoute: typeof EventsFourthJulyImport
      parentRoute: typeof EventsRouteImport
    }
    '/events/gender-reveal': {
      id: '/events/gender-reveal'
      path: '/gender-reveal'
      fullPath: '/events/gender-reveal'
      preLoaderRoute: typeof EventsGenderRevealImport
      parentRoute: typeof EventsRouteImport
    }
    '/events/new-years': {
      id: '/events/new-years'
      path: '/new-years'
      fullPath: '/events/new-years'
      preLoaderRoute: typeof EventsNewYearsImport
      parentRoute: typeof EventsRouteImport
    }
    '/products/shows': {
      id: '/products/shows'
      path: '/products/shows'
      fullPath: '/products/shows'
      preLoaderRoute: typeof ProductsShowsImport
      parentRoute: typeof rootRoute
    }
    '/user/login': {
      id: '/user/login'
      path: '/user/login'
      fullPath: '/user/login'
      preLoaderRoute: typeof UserLoginImport
      parentRoute: typeof rootRoute
    }
    '/user/register': {
      id: '/user/register'
      path: '/user/register'
      fullPath: '/user/register'
      preLoaderRoute: typeof UserRegisterImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/admin/inventory': {
      id: '/_auth/admin/inventory'
      path: '/inventory'
      fullPath: '/admin/inventory'
      preLoaderRoute: typeof AuthAdminInventoryImport
      parentRoute: typeof AuthAdminRouteImport
    }
    '/_auth/admin/reports': {
      id: '/_auth/admin/reports'
      path: '/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AuthAdminReportsImport
      parentRoute: typeof AuthAdminRouteImport
    }
    '/_auth/admin/users': {
      id: '/_auth/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthAdminUsersImport
      parentRoute: typeof AuthAdminRouteImport
    }
    '/_auth/profile/edit': {
      id: '/_auth/profile/edit'
      path: '/profile/edit'
      fullPath: '/profile/edit'
      preLoaderRoute: typeof AuthProfileEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile/': {
      id: '/_auth/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile/cart/$cartId/success': {
      id: '/_auth/profile/cart/$cartId/success'
      path: '/profile/cart/$cartId/success'
      fullPath: '/profile/cart/$cartId/success'
      preLoaderRoute: typeof AuthProfileCartCartIdSuccessImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile/cart/$cartId/': {
      id: '/_auth/profile/cart/$cartId/'
      path: '/profile/cart/$cartId'
      fullPath: '/profile/cart/$cartId'
      preLoaderRoute: typeof AuthProfileCartCartIdIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  EventsRouteRoute: EventsRouteRoute.addChildren({
    EventsFourthJulyRoute,
    EventsGenderRevealRoute,
    EventsNewYearsRoute,
  }),
  AuthRoute: AuthRoute.addChildren({
    AuthAdminRouteRoute: AuthAdminRouteRoute.addChildren({
      AuthAdminInventoryRoute,
      AuthAdminReportsRoute,
      AuthAdminUsersRoute,
    }),
    AuthProfileEditRoute,
    AuthProfileIndexRoute,
    AuthProfileCartCartIdSuccessRoute,
    AuthProfileCartCartIdIndexRoute,
  }),
  AboutLazyRoute,
  ProductsProductIdRouteRoute,
  ProductsShowsRoute,
  UserLoginRoute,
  UserRegisterRoute,
  ProductsIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/events",
        "/_auth",
        "/about",
        "/products/$productId",
        "/products/shows",
        "/user/login",
        "/user/register",
        "/products/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/events": {
      "filePath": "events/route.tsx",
      "children": [
        "/events/fourth-july",
        "/events/gender-reveal",
        "/events/new-years"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/admin",
        "/_auth/profile/edit",
        "/_auth/profile/",
        "/_auth/profile/cart/$cartId/success",
        "/_auth/profile/cart/$cartId/"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/_auth/admin": {
      "filePath": "_auth/admin/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/admin/inventory",
        "/_auth/admin/reports",
        "/_auth/admin/users"
      ]
    },
    "/products/$productId": {
      "filePath": "products/$productId/route.tsx"
    },
    "/events/fourth-july": {
      "filePath": "events/fourth-july.tsx",
      "parent": "/events"
    },
    "/events/gender-reveal": {
      "filePath": "events/gender-reveal.tsx",
      "parent": "/events"
    },
    "/events/new-years": {
      "filePath": "events/new-years.tsx",
      "parent": "/events"
    },
    "/products/shows": {
      "filePath": "products/shows.tsx"
    },
    "/user/login": {
      "filePath": "user/login.tsx"
    },
    "/user/register": {
      "filePath": "user/register.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/_auth/admin/inventory": {
      "filePath": "_auth/admin/inventory.tsx",
      "parent": "/_auth/admin"
    },
    "/_auth/admin/reports": {
      "filePath": "_auth/admin/reports.tsx",
      "parent": "/_auth/admin"
    },
    "/_auth/admin/users": {
      "filePath": "_auth/admin/users.tsx",
      "parent": "/_auth/admin"
    },
    "/_auth/profile/edit": {
      "filePath": "_auth/profile/edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile/": {
      "filePath": "_auth/profile/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile/cart/$cartId/success": {
      "filePath": "_auth/profile/cart/$cartId/success.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile/cart/$cartId/": {
      "filePath": "_auth/profile/cart/$cartId/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
